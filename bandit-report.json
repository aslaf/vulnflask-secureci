{
  "errors": [],
  "generated_at": "2025-10-11T06:04:58Z",
  "metrics": {
    "_totals": {
      "CONFIDENCE.HIGH": 1,
      "CONFIDENCE.LOW": 1,
      "CONFIDENCE.MEDIUM": 4,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 1,
      "SEVERITY.LOW": 2,
      "SEVERITY.MEDIUM": 3,
      "SEVERITY.UNDEFINED": 0,
      "loc": 93,
      "nosec": 0,
      "skipped_tests": 0
    },
    "app/__init__.py": {
      "CONFIDENCE.HIGH": 0,
      "CONFIDENCE.LOW": 0,
      "CONFIDENCE.MEDIUM": 0,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 0,
      "SEVERITY.LOW": 0,
      "SEVERITY.MEDIUM": 0,
      "SEVERITY.UNDEFINED": 0,
      "loc": 0,
      "nosec": 0,
      "skipped_tests": 0
    },
    "app/app.py": {
      "CONFIDENCE.HIGH": 1,
      "CONFIDENCE.LOW": 1,
      "CONFIDENCE.MEDIUM": 4,
      "CONFIDENCE.UNDEFINED": 0,
      "SEVERITY.HIGH": 1,
      "SEVERITY.LOW": 2,
      "SEVERITY.MEDIUM": 3,
      "SEVERITY.UNDEFINED": 0,
      "loc": 93,
      "nosec": 0,
      "skipped_tests": 0
    }
  },
  "results": [
    {
      "code": "10 app = Flask(__name__)\n11 app.secret_key = \"dev-secret\"  # weak secret for demo\n12 DB_PATH = os.path.join(os.path.dirname(__file__), \"data.db\")\n",
      "col_offset": 17,
      "end_col_offset": 29,
      "filename": "app/app.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 259,
        "link": "https://cwe.mitre.org/data/definitions/259.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Possible hardcoded password: 'dev-secret'",
      "line_number": 11,
      "line_range": [
        11
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b105_hardcoded_password_string.html",
      "test_id": "B105",
      "test_name": "hardcoded_password_string"
    },
    {
      "code": "71         db.commit()\n72     except Exception:\n73         pass\n74     db.close()\n",
      "col_offset": 4,
      "end_col_offset": 12,
      "filename": "app/app.py",
      "issue_confidence": "HIGH",
      "issue_cwe": {
        "id": 703,
        "link": "https://cwe.mitre.org/data/definitions/703.html"
      },
      "issue_severity": "LOW",
      "issue_text": "Try, Except, Pass detected.",
      "line_number": 72,
      "line_range": [
        72,
        73
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html",
      "test_id": "B110",
      "test_name": "try_except_pass"
    },
    {
      "code": "99         query = (\n100             f\"SELECT * FROM users WHERE username='{username}' AND password='{password}'\"\n101         )\n",
      "col_offset": 14,
      "end_col_offset": 50,
      "filename": "app/app.py",
      "issue_confidence": "LOW",
      "issue_cwe": {
        "id": 89,
        "link": "https://cwe.mitre.org/data/definitions/89.html"
      },
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 100,
      "line_range": [
        100
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "115     # SQLi via string interpolation\n116     rows = db.execute(f\"SELECT * FROM products WHERE name LIKE '%{q}%'\").fetchall()\n117     return render_template(\"search.html\", products=rows, q=q)\n",
      "col_offset": 24,
      "end_col_offset": 65,
      "filename": "app/app.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 89,
        "link": "https://cwe.mitre.org/data/definitions/89.html"
      },
      "issue_severity": "MEDIUM",
      "issue_text": "Possible SQL injection vector through string-based query construction.",
      "line_number": 116,
      "line_range": [
        116
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b608_hardcoded_sql_expressions.html",
      "test_id": "B608",
      "test_name": "hardcoded_sql_expressions"
    },
    {
      "code": "131         init_db()\n132     app.run(host=\"0.0.0.0\", port=5000, debug=True)\n",
      "col_offset": 4,
      "end_col_offset": 50,
      "filename": "app/app.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 94,
        "link": "https://cwe.mitre.org/data/definitions/94.html"
      },
      "issue_severity": "HIGH",
      "issue_text": "A Flask app appears to be run with debug=True, which exposes the Werkzeug debugger and allows the execution of arbitrary code.",
      "line_number": 132,
      "line_range": [
        132
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b201_flask_debug_true.html",
      "test_id": "B201",
      "test_name": "flask_debug_true"
    },
    {
      "code": "131         init_db()\n132     app.run(host=\"0.0.0.0\", port=5000, debug=True)\n",
      "col_offset": 17,
      "end_col_offset": 26,
      "filename": "app/app.py",
      "issue_confidence": "MEDIUM",
      "issue_cwe": {
        "id": 605,
        "link": "https://cwe.mitre.org/data/definitions/605.html"
      },
      "issue_severity": "MEDIUM",
      "issue_text": "Possible binding to all interfaces.",
      "line_number": 132,
      "line_range": [
        132
      ],
      "more_info": "https://bandit.readthedocs.io/en/1.8.6/plugins/b104_hardcoded_bind_all_interfaces.html",
      "test_id": "B104",
      "test_name": "hardcoded_bind_all_interfaces"
    }
  ]
}
